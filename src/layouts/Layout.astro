---
import ThemeToggleButton from '../components/ThemeToggleButton.astro';
import '../styles/global.css';
---
<!doctype html>
<html lang="en" class="font-sans">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>Professional Portfolio</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    
    <style>
      /* Sistema de transiciones de tema mejorado */
      .theme-transition-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        pointer-events: none;
        z-index: 9999;
        background: transparent;
        transform-origin: top right;
        transition: none;
      }

      .theme-transition-overlay.transitioning-to-dark {
        background: radial-gradient(circle at 85% 60px, rgba(17, 24, 39, 0.8) 0%, transparent 60%);
        clip-path: circle(0% at 85% 60px);
        animation: expandThemeDark 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
      }

      .theme-transition-overlay.transitioning-to-light {
        background: radial-gradient(circle at 85% 60px, rgba(243, 244, 246, 0.8) 0%, transparent 60%);
        clip-path: circle(0% at 85% 60px);
        animation: expandThemeLight 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
      }

      @keyframes expandThemeDark {
        0% {
          clip-path: circle(0% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(17, 24, 39, 0) 0%, transparent 60%);
        }
        50% {
          clip-path: circle(25% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(17, 24, 39, 0.6) 0%, transparent 60%);
        }
        100% {
          clip-path: circle(150% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(17, 24, 39, 0.9) 0%, rgba(17, 24, 39, 0.3) 60%);
        }
      }

      @keyframes expandThemeLight {
        0% {
          clip-path: circle(0% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(243, 244, 246, 0) 0%, transparent 60%);
        }
        50% {
          clip-path: circle(25% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(243, 244, 246, 0.6) 0%, transparent 60%);
        }
        100% {
          clip-path: circle(150% at 85% 60px);
          background: radial-gradient(circle at 85% 60px, rgba(243, 244, 246, 0.9) 0%, rgba(243, 244, 246, 0.3) 60%);
        }
      }

      /* Prevenir parpadeos durante transiciones */
      html.theme-transitioning * {
        transition: none !important;
      }

      /* Scroll suave global */
      html {
        scroll-behavior: smooth;
      }

      /* Mejoras de accesibilidad y UX */
      *, *::before, *::after {
        box-sizing: border-box;
      }

      /* Transiciones globales mejoradas */
      body {
        transition: background-color 0.6s cubic-bezier(0.4, 0, 0.2, 1), 
                    color 0.6s cubic-bezier(0.4, 0, 0.2, 1);
        overflow-x: hidden;
      }

      /* Loading state para mejor UX */
      .page-loading {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
      }

      .page-loaded {
        opacity: 1;
        transform: translateY(0);
      }

      /* Foco visible mejorado para accesibilidad */
      :focus-visible {
        outline: 2px solid #3b82f6;
        outline-offset: 2px;
        border-radius: 4px;
      }

      /* Animaci贸n para el punto brillante del navbar */
      .glowing-dot {
        animation: pulse-glow 2s infinite;
      }

      @keyframes pulse-glow {
        0% {
          box-shadow: 0 0 0 0 rgba(74, 222, 128, 0.7);
        }
        70% {
          box-shadow: 0 0 0 8px rgba(74, 222, 128, 0);
        }
        100% {
          box-shadow: 0 0 0 0 rgba(74, 222, 128, 0);
        }
      }

      /* Mejorar la transici贸n del navbar link */
      .nav-link:hover .glowing-dot {
        animation: pulse-glow 1.5s infinite;
        box-shadow: 0 0 8px rgba(74, 222, 128, 0.6);
      }
    </style>
  </head>
    <body class="bg-slate-900 dark:bg-slate-900 text-slate-800 dark:text-slate-100 page-loading" style="font-family: 'Montserrat', sans-serif;">
    <!-- Theme Transition Overlay -->
    <div id="theme-transition-overlay" class="theme-transition-overlay"></div>
    
    <!-- Header mejorado con navbar y theme toggle -->
    <header class="fixed top-0 left-0 right-0 z-50 bg-white/10 dark:bg-slate-800/10 backdrop-blur-md border-b border-white/20 dark:border-slate-700/50">
      <div class="max-w-7xl mx-auto px-6 py-4 flex items-center justify-center relative">
        <!-- Navbar centrado -->
        <nav class="flex items-center space-x-8">
          <a href="#home" class="nav-link group relative flex items-center gap-2 px-4 py-2 rounded-full transition-all duration-300 hover:bg-green-500/20 hover:text-green-400 text-slate-800 dark:text-slate-100 font-medium">
            <span class="glowing-dot w-2 h-2 bg-green-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 shadow-lg shadow-green-400/50"></span>
            Home
          </a>
          <a href="#about" class="nav-link group relative flex items-center gap-2 px-4 py-2 rounded-full transition-all duration-300 hover:bg-green-500/20 hover:text-green-400 text-slate-800 dark:text-slate-100 font-medium">
            <span class="glowing-dot w-2 h-2 bg-green-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 shadow-lg shadow-green-400/50"></span>
            About
          </a>
          <a href="#projects" class="nav-link group relative flex items-center gap-2 px-4 py-2 rounded-full transition-all duration-300 hover:bg-green-500/20 hover:text-green-400 text-slate-800 dark:text-slate-100 font-medium">
            <span class="glowing-dot w-2 h-2 bg-green-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 shadow-lg shadow-green-400/50"></span>
            Projects
          </a>
          <a href="#contact" class="nav-link group relative flex items-center gap-2 px-4 py-2 rounded-full transition-all duration-300 hover:bg-green-500/20 hover:text-green-400 text-slate-800 dark:text-slate-100 font-medium">
            <span class="glowing-dot w-2 h-2 bg-green-400 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300 shadow-lg shadow-green-400/50"></span>
            Contact
          </a>
        </nav>
        
        <!-- Theme toggle posicionado absolutamente a la derecha -->
        <div class="absolute right-0 bg-white/10 dark:bg-slate-800/30 backdrop-blur-md rounded-2xl p-2 border border-white/20 dark:border-slate-700/50 shadow-lg">
          <ThemeToggleButton />
        </div>
      </div>
    </header>
    
    <!-- Loading indicator -->
    <div id="loading-indicator" class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 bg-blue-500/10 backdrop-blur-md border border-blue-500/20 rounded-full px-4 py-2 text-blue-400 text-sm font-medium opacity-0 transition-opacity duration-300">
      <div class="flex items-center gap-2">
        <div class="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
        <span>Loading...</span>
      </div>
    </div>
    
    <main class="min-h-screen pt-20">
      <slot />
    </main>
    
    <script>
      // Sistema de tema mejorado con mejor UX
      function initializeTheme() {
        console.log("Initializing theme in Layout");
        try {
          const savedTheme = localStorage.getItem('theme');
          console.log("Saved theme:", savedTheme);
          
          if (savedTheme === 'light') {
            document.documentElement.classList.remove('dark');
            console.log("Set to light theme");
          } else {
            document.documentElement.classList.add('dark');
            console.log("Set to dark theme");
            if (!savedTheme) {
              localStorage.setItem('theme', 'dark');
            }
          }
        } catch (error) {
          console.error("Error initializing theme:", error);
        }
      }

      function toggleThemeWithAnimation() {
        console.log("Toggle theme with animation called");
        try {
          const html = document.documentElement;
          const overlay = document.getElementById('theme-transition-overlay');
          const isDark = html.classList.contains('dark');
          
          console.log("Current theme:", isDark ? "dark" : "light");
          console.log("Overlay element:", overlay ? "found" : "not found");
          
          if (!overlay) {
            console.error("Overlay element not found, using fallback");
            // Fallback sin animaci贸n
            if (isDark) {
              html.classList.remove('dark');
              localStorage.setItem('theme', 'light');
            } else {
              html.classList.add('dark');
              localStorage.setItem('theme', 'dark');
            }
            return;
          }
          
          if (overlay.classList.contains('transitioning-to-dark') || 
              overlay.classList.contains('transitioning-to-light')) {
            console.log("Already transitioning, ignoring request");
            return;
          }
          
          // Mostrar loading indicator durante transici贸n
          showLoadingIndicator();
          
          html.classList.add('theme-transitioning');
          
          if (isDark) {
            console.log("Transitioning to light theme");
            overlay.classList.add('transitioning-to-light');
          } else {
            console.log("Transitioning to dark theme");
            overlay.classList.add('transitioning-to-dark');
          }
          
          setTimeout(() => {
            if (isDark) {
              html.classList.remove('dark');
              localStorage.setItem('theme', 'light');
            } else {
              html.classList.add('dark');
              localStorage.setItem('theme', 'dark');
            }
            console.log("Theme classes updated");
          }, 400);
          
          setTimeout(() => {
            if (overlay) {
              overlay.classList.remove('transitioning-to-dark', 'transitioning-to-light');
            }
            html.classList.remove('theme-transitioning');
            hideLoadingIndicator();
            console.log("Animation completed");
          }, 1200);
        } catch (error) {
          console.error("Error toggling theme:", error);
        }
      }

      // Indicador de carga
      function showLoadingIndicator() {
        const indicator = document.getElementById('loading-indicator');
        if (indicator) {
          indicator.style.opacity = '1';
        }
      }

      function hideLoadingIndicator() {
        const indicator = document.getElementById('loading-indicator');
        if (indicator) {
          indicator.style.opacity = '0';
        }
      }

      // Animaci贸n de carga de p谩gina
      function initializePageLoad() {
        const body = document.body;
        
        // Agregar clase de cargado despu茅s de un breve delay
        setTimeout(() => {
          body.classList.remove('page-loading');
          body.classList.add('page-loaded');
        }, 100);
      }

      // Scroll suave mejorado para navegaci贸n
      function initializeSmoothScroll() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
          anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
              target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });
            }
          });
        });
      }

      // Optimizaci贸n de rendimiento con Intersection Observer
      function initializeIntersectionObserver() {
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-in-view');
            }
          });
        }, observerOptions);

        // Observar elementos con animaciones
        document.querySelectorAll('[class*="animate-"]').forEach(el => {
          observer.observe(el);
        });
      }

      // Gesti贸n mejorada de eventos de teclado para accesibilidad
      function initializeKeyboardNavigation() {
        document.addEventListener('keydown', (e) => {
          // ESC para cerrar modales o overlays
          if (e.key === 'Escape') {
            // Aqu铆 puedes agregar l贸gica para cerrar modales
          }
          
          // Tab navigation mejorada
          if (e.key === 'Tab') {
            document.body.classList.add('keyboard-navigation');
          }
        });

        document.addEventListener('mousedown', () => {
          document.body.classList.remove('keyboard-navigation');
        });
      }

      // Exponer funciones globalmente
      window.toggleThemeWithAnimation = toggleThemeWithAnimation;

      // Inicializaci贸n cuando el DOM est茅 listo
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          initializeTheme();
          initializePageLoad();
          initializeSmoothScroll();
          initializeIntersectionObserver();
          initializeKeyboardNavigation();
        });
      } else {
        initializeTheme();
        initializePageLoad();
        initializeSmoothScroll();
        initializeIntersectionObserver();
        initializeKeyboardNavigation();
      }

      // Optimizaci贸n de rendimiento: Debounce para resize events
      let resizeTimeout;
      window.addEventListener('resize', () => {
        clearTimeout(resizeTimeout);
        resizeTimeout = setTimeout(() => {
          // Aqu铆 puedes agregar l贸gica de redimensionamiento si es necesario
        }, 250);
      });
    </script>
  </body>
</html>