/* === CORRECCIONES ESPECÍFICAS PARA LAYOUT Y Z-INDEX === */

/* Asegurar z-index correcto para evitar superposiciones */
body {
  position: relative;
  transform: none !important;
  min-height: 100vh;
}

/* Corregir posicionamiento de secciones principales */
main {
  position: relative;
  z-index: 1;
}

section {
  position: relative;
  z-index: 2;
  transform: none !important;
}

/* Navegación siempre encima */
nav#main-nav {
  z-index: 50 !important;
  position: fixed !important;
}

/* Hero section sin inclinación */
.hero-bg {
  transform: none !important;
  position: relative;
  z-index: 1;
}

.hero-bg > div {
  transform: none !important;
}

/* Elementos de fondo en su lugar correcto */
.bg-particles {
  z-index: -10 !important;
  position: fixed;
  transform: none !important;
}

/* Corregir cualquier transformación que cause inclinación */
.reveal {
  transform: translateY(50px) !important;
  will-change: transform, opacity;
}

.reveal.revealed {
  transform: translateY(0) !important;
}

/* Prevenir scroll automático anómalo */
html {
  scroll-behavior: smooth;
  overflow-y: scroll;
  overflow-x: hidden;
  position: relative;
}

/* Eliminar transformaciones problemáticas de animaciones */
@keyframes float {
  0%, 100% { 
    transform: translateY(0px) !important; 
  }
  33% { 
    transform: translateY(-5px) !important; 
  }
  66% { 
    transform: translateY(2px) !important; 
  }
}

/* Asegurar que las secciones no se superpongan */
section + section {
  clear: both;
}

/* Corregir elementos con posición absoluta problemática */
.absolute {
  position: absolute !important;
}

.fixed {
  position: fixed !important;
}

.relative {
  position: relative !important;
}

/* Eliminar transformaciones de rotación no deseadas */
* {
  transform-style: flat !important;
}

/* Optimizar el scroll y prevenir jumpiness */
* {
  scroll-behavior: smooth;
}

body, html {
  height: auto;
  min-height: 100vh;
}

/* Corregir posicionamiento del contenido principal */
#main-content {
  position: relative;
  z-index: 1;
  min-height: 100vh;
}

/* Asegurar que los botones de navegación no causen scroll automático */
.btn-primary, .btn-secondary {
  transform: none !important;
  transition: transform 0.3s ease, box-shadow 0.3s ease !important;
}

.btn-primary:hover, .btn-secondary:hover {
  transform: translateY(-2px) !important;
}

/* Prevenir efectos de hover que causen layout shift */
.hover-lift {
  transition: transform 0.3s ease !important;
}

.hover-lift:hover {
  transform: translateY(-4px) scale(1.01) !important;
}

/* Corregir elementos que podrían estar causando el scroll anómalo */
.scroll-progress {
  position: fixed !important;
  top: 0 !important;
  z-index: 60 !important;
}

#back-to-top {
  position: fixed !important;
  z-index: 60 !important;
  bottom: 2rem !important;
  right: 2rem !important;
}

/* Eliminar cualquier rotación o inclinación de contenedores */
.container {
  transform: none !important;
}

/* Asegurar que las animaciones no interfieran con el layout */
@media (prefers-reduced-motion: no-preference) {
  .reveal {
    animation: fadeInUp 0.8s ease-out forwards !important;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px) !important;
  }
  to {
    opacity: 1;
    transform: translateY(0) !important;
  }
}

/* Corregir posibles problemas con el navbar */
.navbar {
  transform: translateY(0) !important;
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
}

.navbar.hidden {
  transform: translateY(-100%) !important;
}

/* Eliminar transformaciones que causen problemas visuales */
.gradient-text {
  display: inline-block;
  transform: none !important;
}

/* Prevenir overflow horizontal que podría causar scroll anómalo */
body, html {
  overflow-x: hidden !important;
}

/* Asegurar que los pseudo-elementos no causen problemas */
.hero-bg::before,
.hero-bg::after {
  transform: none !important;
  z-index: -1 !important;
}

/* Corregir cualquier perspectiva que cause inclinación */
.hero-bg,
section,
main {
  perspective: none !important;
  transform-style: flat !important;
}

/* Optimización final para prevenir glitches */
section {
  will-change: auto !important;
}

.reveal:not(.revealed) {
  will-change: transform, opacity;
}

.reveal.revealed {
  will-change: auto;
}
