---
---

<!-- 🎨 Navegación Modernizada -->
<nav id="main-nav" class="navbar fixed top-0 left-0 right-0 z-50 backdrop-blur-xl border-b transition-all duration-500 ease-out glass-dark">
  <div class="container mx-auto px-6 lg:px-8">
    <div class="relative flex items-center justify-between h-16">
      <!-- Logo/Brand Mejorado -->
      <div class="flex items-center">
        <a href="#home" class="logo group relative overflow-hidden" data-track="nav-logo">
          <span class="gradient-text relative z-10 text-xl font-bold transition-all duration-300 hover:scale-110">JA</span>
          <div class="absolute inset-0 rounded-lg scale-0 group-hover:scale-100 transition-transform duration-300 -m-2" 
               style="background: var(--gradient-primary); opacity: 0.1;"></div>
        </a>
      </div>
      
      <!-- Navigation Links Mejorados -->
      <div class="hidden md:flex items-center space-x-1">
        <a href="#home" class="nav-link group relative" data-text="Home" data-track="nav-home">
          <span class="nav-text">Home</span>
          <div class="nav-indicator"></div>
        </a>
        <a href="#about" class="nav-link group relative" data-text="Skills" data-track="nav-skills">
          <span class="nav-text">Skills</span>
          <div class="nav-indicator"></div>
        </a>
        <a href="#projects" class="nav-link group relative" data-text="Projects" data-track="nav-projects">
          <span class="nav-text">Projects</span>
          <div class="nav-indicator"></div>
        </a>
        <a href="#contact" class="nav-link group relative" data-text="Contact" data-track="nav-contact">
          <span class="nav-text">Contact</span>
          <div class="nav-indicator"></div>
        </a>
      </div>
      
      <!-- Mobile Menu Button Mejorado -->
      <div class="md:hidden">
        <button id="mobile-menu-btn" class="mobile-menu-btn group relative p-2 rounded-lg transition-all duration-300 hover:bg-white/5" 
                aria-label="Toggle menu" data-track="nav-mobile-toggle">
          <div class="hamburger">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
          </div>
        </button>
      </div>
    </div>
    
    <!-- Progress indicator mejorado -->
    <div class="scroll-progress absolute bottom-0 left-0 h-0.5 transition-all duration-300 ease-out origin-left scale-x-0" 
         style="background: var(--gradient-primary);"></div>
  </div>
  
  <!-- Mobile Menu -->
  <div id="mobile-menu" class="mobile-menu absolute top-full left-0 right-0 overflow-hidden transition-all duration-400 ease-out max-h-0 opacity-0">
    <div class="mobile-menu-content backdrop-blur-xl border-b m-4 rounded-2xl shadow-xl" style="background: rgba(26, 26, 35, 0.95); border-color: var(--border-light);">
      <div class="p-6 space-y-2">
        <a href="#home" class="mobile-nav-link block">
          <span class="mobile-nav-text">Home</span>
        </a>
        <a href="#about" class="mobile-nav-link block">
          <span class="mobile-nav-text">Skills</span>
        </a>
        <a href="#projects" class="mobile-nav-link block">
          <span class="mobile-nav-text">Projects</span>
        </a>
        <a href="#contact" class="mobile-nav-link block">
          <span class="mobile-nav-text">Contact</span>
        </a>
      </div>
    </div>
  </div>
</nav>

<style>
  /* Variables CSS para mejor consistencia */
  :root {
    --nav-timing: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    --nav-duration: 0.3s;
    --nav-spring: cubic-bezier(0.34, 1.56, 0.64, 1);
    --emerald-glow: rgba(16, 185, 129, 0.3);
    --blue-glow: rgba(59, 130, 246, 0.3);
  }

  /* Inicialización del navbar con animación suave */
  .navbar {
    transform: translateY(-100%);
    animation: navbar-enter 0.8s var(--nav-timing) forwards;
    animation-delay: 0.2s;
    will-change: transform;
  }

  @keyframes navbar-enter {
    to {
      transform: translateY(0);
    }
  }

  /* Estados del navbar según scroll */
  .navbar.scrolled {
    background: rgba(26, 26, 35, 0.95) !important;
    border-color: var(--border-medium) !important;
    box-shadow: 0 8px 32px var(--shadow-medium);
  }

  .navbar.hidden {
    transform: translateY(-100%);
    transition: transform 0.4s var(--nav-timing);
  }

  /* Logo con animación mejorada */
  .logo {
    opacity: 0;
    transform: scale(0.8) rotate(-5deg);
    animation: logo-enter 0.6s var(--nav-spring) forwards;
    animation-delay: 0.5s;
    color: var(--text-primary);
    transition: all var(--nav-duration) var(--nav-timing);
  }

  @keyframes logo-enter {
    to {
      opacity: 1;
      transform: scale(1) rotate(0deg);
    }
  }

  .logo:hover {
    transform: scale(1.05) rotate(2deg);
    filter: drop-shadow(0 0 8px rgba(99, 102, 241, 0.4));
  }

  /* Sistema de navegación moderno */
  .nav-link {
    position: relative;
    padding: 0.75rem 1.25rem;
    color: var(--text-secondary);
    font-weight: 500;
    font-size: 0.9rem;
    border-radius: 0.75rem;
    transition: all var(--nav-duration) var(--nav-timing);
    opacity: 0;
    transform: translateY(-20px);
    animation: nav-link-enter 0.5s var(--nav-timing) forwards;
    overflow: hidden;
  }

  .nav-link:nth-child(1) { animation-delay: 0.7s; }
  .nav-link:nth-child(2) { animation-delay: 0.8s; }
  .nav-link:nth-child(3) { animation-delay: 0.9s; }
  .nav-link:nth-child(4) { animation-delay: 1.0s; }

  @keyframes nav-link-enter {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Efectos hover modernos */
  .nav-link:hover {
    color: var(--color-secondary);
    background: rgba(16, 185, 129, 0.15);
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(16, 185, 129, 0.2);
  }

  /* Indicador de link activo */
  .nav-indicator {
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--gradient-primary);
    border-radius: 1px;
    transform: translateX(-50%);
    transition: width var(--nav-duration) var(--nav-timing);
  }

  .nav-link:hover .nav-indicator,
  .nav-link.active .nav-indicator {
    width: 80%;
  }

  /* Animación de texto mejorada */
  .nav-text {
    position: relative;
    display: inline-block;
    transition: transform var(--nav-duration) var(--nav-timing);
  }

  .nav-link:hover .nav-text {
    transform: scale(1.05);
  }

  /* Efecto ripple en hover */
  .nav-link::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(circle, rgba(16, 185, 129, 0.2) 0%, transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.6s ease-out;
    opacity: 0;
  }

  .nav-link:hover::before {
    width: 200px;
    height: 200px;
    opacity: 1;
  }

  /* Link activo */
  .nav-link.active {
    color: #10b981;
    background: rgba(16, 185, 129, 0.12);
    box-shadow: 0 2px 12px rgba(16, 185, 129, 0.2);
  }

  /* Hamburger menu animado */
  .mobile-menu-btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    transition: all var(--nav-duration) var(--nav-timing);
    opacity: 0;
    transform: scale(0.8);
    animation: mobile-btn-enter 0.5s var(--nav-timing) forwards;
    animation-delay: 1s;
  }

  .dark .mobile-menu-btn {
    background: rgba(0, 0, 0, 0.2);
    border-color: rgba(255, 255, 255, 0.1);
  }

  @keyframes mobile-btn-enter {
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .mobile-menu-btn:hover {
    background: rgba(16, 185, 129, 0.15);
    border-color: rgba(16, 185, 129, 0.3);
    transform: scale(1.05);
  }

  /* Hamburger lines */
  .hamburger {
    width: 24px;
    height: 18px;
    position: relative;
  }

  .hamburger-line {
    position: absolute;
    left: 0;
    width: 100%;
    height: 2px;
    background: #64748b;
    border-radius: 1px;
    transition: all 0.3s var(--nav-timing);
  }

  .dark .hamburger-line {
    background: #94a3b8;
  }

  .hamburger-line:nth-child(1) { top: 0; }
  .hamburger-line:nth-child(2) { top: 50%; transform: translateY(-50%); }
  .hamburger-line:nth-child(3) { bottom: 0; }

  /* Animación del hamburger al abrir */
  .mobile-menu-btn.active .hamburger-line:nth-child(1) {
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
  }

  .mobile-menu-btn.active .hamburger-line:nth-child(2) {
    opacity: 0;
    transform: translateY(-50%) scale(0);
  }

  .mobile-menu-btn.active .hamburger-line:nth-child(3) {
    bottom: 50%;
    transform: translateY(50%) rotate(-45deg);
  }

  /* Menú móvil mejorado */
  .mobile-menu {
    backdrop-filter: blur(20px);
    transition: all 0.4s var(--nav-timing);
  }

  .mobile-menu.show {
    max-height: 400px;
    opacity: 1;
  }

  .mobile-menu-content {
    transform: translateY(-20px);
    transition: transform 0.4s var(--nav-timing) 0.1s;
  }

  .mobile-menu.show .mobile-menu-content {
    transform: translateY(0);
  }

  /* Links del menú móvil */
  .mobile-nav-link {
    position: relative;
    padding: 1rem 1.5rem;
    color: #64748b;
    font-weight: 500;
    border-radius: 0.75rem;
    transition: all var(--nav-duration) var(--nav-timing);
    overflow: hidden;
  }

  .dark .mobile-nav-link {
    color: #94a3b8;
  }

  .mobile-nav-link:hover {
    color: #10b981;
    background: rgba(16, 185, 129, 0.1);
    transform: translateX(8px);
  }

  .mobile-nav-text {
    position: relative;
    z-index: 1;
  }

  /* Progreso de scroll */
  .scroll-progress {
    transition: transform 0.3s ease-out;
  }

  /* Responsividad mejorada */
  @media (max-width: 768px) {
    .navbar .container {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }

  @media (min-width: 1024px) {
    .nav-link {
      padding: 0.875rem 1.5rem;
      font-size: 0.95rem;
    }
  }

  /* Accesibilidad - reducir animaciones */
  @media (prefers-reduced-motion: reduce) {
    .navbar,
    .logo,
    .nav-link,
    .mobile-menu-btn {
      animation: none;
      transition-duration: 0.1s;
    }
    
    .navbar {
      transform: none;
      opacity: 1;
    }
    
    .logo,
    .nav-link,
    .mobile-menu-btn {
      opacity: 1;
      transform: none;
    }
    
    .nav-link:hover {
      transform: none;
    }
  }

  /* Estados focus para accesibilidad */
  .nav-link:focus-visible,
  .mobile-menu-btn:focus-visible {
    outline: 2px solid #10b981;
    outline-offset: 2px;
  }

  /* Optimización para rendimiento */
  .navbar,
  .nav-link,
  .mobile-menu {
    will-change: transform;
  }

  .nav-link:not(:hover) {
    will-change: auto;
  }
</style>

<script>
  // Declaraciones TypeScript mejoradas
  declare global {
    interface Window {
      navbarInitialized?: boolean;
      scrollDirection?: 'up' | 'down';
      lastScrollY?: number;
    }
  }

  class NavbarController {
    private navbar: HTMLElement | null = null;
    private mobileMenuBtn: HTMLElement | null = null;
    private mobileMenu: HTMLElement | null = null;
    private scrollProgress: HTMLElement | null = null;
    private navLinks: NodeListOf<HTMLElement> | null = null;
    private isMenuOpen = false;
    private lastScrollY = 0;
    private scrollDirection: 'up' | 'down' = 'up';
    private scrollTimeout: number | null = null;
    private resizeObserver: ResizeObserver | null = null;

    constructor() {
      this.init();
    }

    private async init(): Promise<void> {
      console.log('🚀 Inicializando Navbar Premium v2.0...');
      
      // Esperar a que el DOM esté completamente cargado
      if (document.readyState === 'loading') {
        await new Promise(resolve => {
          document.addEventListener('DOMContentLoaded', resolve);
        });
      }

      this.setupElements();
      this.setupEventListeners();
      this.setupIntersectionObserver();
      this.setupKeyboardNavigation();
      this.setupAccessibility();
      
      console.log('✅ Navbar Premium v2.0 inicializado correctamente');
    }

    private setupElements(): void {
      this.navbar = document.getElementById('main-nav');
      this.mobileMenuBtn = document.getElementById('mobile-menu-btn');
      this.mobileMenu = document.getElementById('mobile-menu');
      this.scrollProgress = this.navbar?.querySelector('.scroll-progress') as HTMLElement;
      this.navLinks = document.querySelectorAll('.nav-link, .mobile-nav-link');

      if (!this.navbar) {
        console.error('❌ Navbar element not found');
        return;
      }

      // Configurar estado inicial
      this.updateActiveLink();
    }

    private setupEventListeners(): void {
      // Mobile menu toggle con animación mejorada
      this.mobileMenuBtn?.addEventListener('click', (e) => {
        e.preventDefault();
        this.toggleMobileMenu();
      });

      // Smooth scrolling optimizado
      this.navLinks?.forEach(link => {
        link.addEventListener('click', (e) => this.handleNavClick(e, link));
      });

      // Scroll events optimizados con throttling
      let ticking = false;
      window.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            this.handleScroll();
            ticking = false;
          });
          ticking = true;
        }
      }, { passive: true });

      // Resize observer para responsive
      this.setupResizeObserver();

      // Eventos de tema
      window.addEventListener('themeChanged', () => {
        this.handleThemeChange();
      });
    }

    private setupResizeObserver(): void {
      this.resizeObserver = new ResizeObserver(entries => {
        for (const entry of entries) {
          if (entry.target === document.body) {
            this.handleResize();
          }
        }
      });
      
      this.resizeObserver.observe(document.body);
    }

    private handleNavClick(e: Event, link: HTMLElement): void {
      e.preventDefault();
      
      const href = link.getAttribute('href');
      if (!href) return;

      // Efecto de clic visual
      this.addClickEffect(link);

      // Scroll suave con offset personalizado
      const target = document.querySelector(href);
      if (target) {
        const offset = 80; // Altura del navbar
        const targetPosition = (target as HTMLElement).offsetTop - offset;
        
        window.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
        });

        // Cerrar menú móvil si está abierto
        if (this.isMenuOpen) {
          setTimeout(() => this.toggleMobileMenu(), 200);
        }

        // Feedback háptico en dispositivos compatibles
        this.triggerHapticFeedback();
      }
    }

    private addClickEffect(element: HTMLElement): void {
      element.style.transform = 'scale(0.95)';
      element.style.transition = 'transform 0.1s ease-out';
      
      setTimeout(() => {
        element.style.transform = '';
        element.style.transition = '';
      }, 150);
    }

    private triggerHapticFeedback(): void {
      if ('vibrate' in navigator) {
        navigator.vibrate(10);
      }
    }

    private toggleMobileMenu(): void {
      if (!this.mobileMenu || !this.mobileMenuBtn) return;

      this.isMenuOpen = !this.isMenuOpen;
      
      // Actualizar clase del botón
      this.mobileMenuBtn.classList.toggle('active', this.isMenuOpen);
      
      if (this.isMenuOpen) {
        // Abrir menú
        this.mobileMenu.classList.add('show');
        this.mobileMenu.setAttribute('aria-hidden', 'false');
        this.mobileMenuBtn.setAttribute('aria-expanded', 'true');
        
        // Enfocar primer link para accesibilidad
        const firstLink = this.mobileMenu.querySelector('.mobile-nav-link') as HTMLElement;
        setTimeout(() => firstLink?.focus(), 300);
      } else {
        // Cerrar menú
        this.mobileMenu.classList.remove('show');
        this.mobileMenu.setAttribute('aria-hidden', 'true');
        this.mobileMenuBtn.setAttribute('aria-expanded', 'false');
      }

      this.triggerHapticFeedback();
    }

    private handleScroll(): void {
      if (!this.navbar || !this.scrollProgress) return;

      const currentScrollY = window.scrollY;
      const documentHeight = document.documentElement.scrollHeight - window.innerHeight;
      const scrollProgress = Math.min(currentScrollY / documentHeight, 1);
      
      // Actualizar dirección de scroll
      this.scrollDirection = currentScrollY > this.lastScrollY ? 'down' : 'up';
      
      // Actualizar progreso visual
      this.scrollProgress.style.transform = `scaleX(${scrollProgress})`;
      
      // Efectos de scroll en navbar
      if (currentScrollY > 50) {
        this.navbar.classList.add('scrolled');
      } else {
        this.navbar.classList.remove('scrolled');
      }

      // Auto-hide navbar (opcional)
      this.handleNavbarVisibility(currentScrollY);
      
      // Actualizar link activo
      this.debounce(() => this.updateActiveLink(), 100)();
      
      this.lastScrollY = currentScrollY;
    }

    private handleNavbarVisibility(scrollY: number): void {
      if (!this.navbar) return;

      const threshold = 100;
      const isScrollingDown = this.scrollDirection === 'down';
      const shouldHide = isScrollingDown && scrollY > threshold && !this.isMenuOpen;
      
      this.navbar.classList.toggle('hidden', shouldHide);
    }

    private updateActiveLink(): void {
      if (!this.navLinks) return;

      const sections = document.querySelectorAll('section[id], div[id]');
      let currentSection = '';

      sections.forEach(section => {
        const htmlSection = section as HTMLElement;
        const rect = htmlSection.getBoundingClientRect();
        const threshold = window.innerHeight * 0.3;
        
        if (rect.top <= threshold && rect.bottom >= threshold) {
          const id = section.getAttribute('id');
          if (id) currentSection = id;
        }
      });

      // Actualizar clases activas
      this.navLinks.forEach(link => {
        const isActive = link.getAttribute('href') === `#${currentSection}`;
        link.classList.toggle('active', isActive);
      });
    }

    private setupIntersectionObserver(): void {
      const observerOptions = {
        threshold: [0.1, 0.5, 0.9],
        rootMargin: '-80px 0px -80px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const id = entry.target.getAttribute('id');
            if (id) {
              this.highlightNavLink(id);
            }
          }
        });
      }, observerOptions);

      // Observar secciones
      document.querySelectorAll('section[id]').forEach(section => {
        observer.observe(section);
      });
    }

    private highlightNavLink(sectionId: string): void {
      this.navLinks?.forEach(link => {
        const isActive = link.getAttribute('href') === `#${sectionId}`;
        link.classList.toggle('active', isActive);
      });
    }

    private setupKeyboardNavigation(): void {
      document.addEventListener('keydown', (e) => {
        switch (e.key) {
          case 'Escape':
            if (this.isMenuOpen) {
              this.toggleMobileMenu();
            }
            break;
          
          case 'Tab':
            document.body.classList.add('keyboard-navigation');
            break;
            
          default:
            // Navegación rápida con Alt + número
            if (e.altKey && e.key >= '1' && e.key <= '4') {
              e.preventDefault();
              const index = parseInt(e.key) - 1;
              const links = Array.from(this.navLinks || []);
              const targetLink = links.filter(link => 
                !link.classList.contains('mobile-nav-link')
              )[index];
              
              if (targetLink) {
                (targetLink as HTMLElement).click();
              }
            }
        }
      });

      document.addEventListener('mousedown', () => {
        document.body.classList.remove('keyboard-navigation');
      });
    }

    private setupAccessibility(): void {
      // Configurar ARIA labels
      this.mobileMenuBtn?.setAttribute('aria-label', 'Toggle navigation menu');
      this.mobileMenuBtn?.setAttribute('aria-expanded', 'false');
      this.mobileMenu?.setAttribute('aria-hidden', 'true');
      
      // Skip link para accesibilidad
      this.createSkipLink();
    }

    private createSkipLink(): void {
      const skipLink = document.createElement('a');
      skipLink.href = '#main-content';
      skipLink.textContent = 'Skip to main content';
      skipLink.className = 'skip-link sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-blue-600 text-white px-3 py-2 rounded z-50';
      
      document.body.insertBefore(skipLink, document.body.firstChild);
    }

    private handleThemeChange(): void {
      // Animación suave para cambio de tema
      if (this.navbar) {
        this.navbar.style.transition = 'all 0.3s ease-out';
        setTimeout(() => {
          this.navbar!.style.transition = '';
        }, 300);
      }
    }

    private handleResize(): void {
      // Cerrar menú móvil en pantallas grandes
      if (window.innerWidth >= 768 && this.isMenuOpen) {
        this.toggleMobileMenu();
      }
    }

    private debounce(func: Function, wait: number): Function {
      return (...args: any[]) => {
        if (this.scrollTimeout) {
          clearTimeout(this.scrollTimeout);
        }
        this.scrollTimeout = window.setTimeout(() => func.apply(this, args), wait);
      };
    }

    // Método para cleanup
    public destroy(): void {
      this.resizeObserver?.disconnect();
      if (this.scrollTimeout) {
        clearTimeout(this.scrollTimeout);
      }
    }
  }

  // Inicializar navbar si no se ha hecho ya
  if (!window.navbarInitialized) {
    window.navbarInitialized = true;
    new NavbarController();
  }
</script>
