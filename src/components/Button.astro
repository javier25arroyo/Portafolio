---
interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  target?: string;
  class?: string;
  children?: any;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href, 
  target,
  class: className = '',
  ...rest 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-semibold rounded-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

const variants = {
  primary: 'bg-emerald-600 hover:bg-emerald-700 text-white focus:ring-emerald-500 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5',
  secondary: 'bg-slate-600 hover:bg-slate-700 text-white focus:ring-slate-500 shadow-md hover:shadow-lg',
  outline: 'border-2 border-emerald-600 text-emerald-600 hover:bg-emerald-600 hover:text-white focus:ring-emerald-500 hover:shadow-lg'
};

const sizes = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

const classes = `${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`;

const Tag = href ? 'a' : 'button';
---

<Tag 
  class={classes}
  href={href}
  target={target}
  {...rest}
>
  <slot />
</Tag>
