---
// Soft Skills Component with Bubble Animation
---

<div class="soft-skills-container">
    <div class="bubbles-container">
        <div class="bubble" data-skill="Effective Communication">
            <span>Effective Communication</span>
        </div>
        <div class="bubble" data-skill="Teamwork and Collaboration">
            <span>Teamwork &amp; Collaboration</span>
        </div>
        <div class="bubble" data-skill="Problem-Solving">
            <span>Problem-Solving</span>
        </div>
        <div class="bubble" data-skill="Critical and Analytical Thinking">
            <span>Critical &amp; Analytical Thinking</span>
        </div>
        <div class="bubble" data-skill="Adaptability">
            <span>Adaptability</span>
        </div>
        <div class="bubble" data-skill="Continuous Learning">
            <span>Continuous Learning</span>
        </div>
        <div class="bubble" data-skill="Time Management">
            <span>Time Management</span>
        </div>
        <div class="bubble" data-skill="Attention to Detail">
            <span>Attention to Detail</span>
        </div>
        <div class="bubble" data-skill="Proactivity">
            <span>Proactivity</span>
        </div>
        <div class="bubble" data-skill="Self-Management">
            <span>Self-Management</span>
        </div>
    </div>
</div>

<style>
    .soft-skills-container {
        position: relative;
        min-height: 700px;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        background: linear-gradient(135deg, 
            rgba(59, 130, 246, 0.08) 0%, 
            rgba(139, 92, 246, 0.08) 25%,
            rgba(16, 185, 129, 0.08) 50%,
            rgba(34, 197, 94, 0.08) 75%,
            rgba(236, 72, 153, 0.08) 100%);
        border-radius: 2rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .bubbles-container {
        position: relative;
        width: 100%;
        height: 100%;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        padding: 2rem;
        perspective: 1000px;
        transform-style: preserve-3d;
    }

    .bubble {
        position: absolute;
        background: radial-gradient(ellipse at 32% 28%, 
            rgba(255, 255, 255, 0.95) 0%, 
            rgba(255, 255, 255, 0.85) 40%,
            rgba(255, 255, 255, 0.75) 100%);
        backdrop-filter: blur(20px);
        border: 2px solid rgba(255, 255, 255, 0.4);
        border-radius: 52% 48% 45% 55% / 58% 42% 65% 35%;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 
            0 12px 40px rgba(0, 0, 0, 0.15),
            0 4px 12px rgba(0, 0, 0, 0.1),
            inset 0 2px 4px rgba(255, 255, 255, 0.8),
            inset 0 -2px 4px rgba(0, 0, 0, 0.05);
        animation: bubbleFloat 8s ease-in-out infinite, 
                   bubbleSway 12s ease-in-out infinite, 
                   bubbleDeform 15s ease-in-out infinite,
                   bubbleDrift 6s ease-in-out infinite;
        transform-style: preserve-3d;
        will-change: transform;
    }

    .bubble::before {
        content: '';
        position: absolute;
        top: 18%;
        left: 22%;
        width: 28%;
        height: 22%;
        background: radial-gradient(ellipse, 
            rgba(255, 255, 255, 0.9) 0%, 
            rgba(255, 255, 255, 0.3) 70%, 
            transparent 100%);
        border-radius: 60% 40% 45% 55% / 50% 70% 30% 50%;
        filter: blur(1px);
        z-index: 1;
        animation: shimmer 10s ease-in-out infinite;
    }

    .bubble span {
        font-size: 1rem;
        font-weight: 700;
        color: #1e293b;
        line-height: 1.3;
        padding: 1.2rem;
        text-shadow: 0 1px 3px rgba(255, 255, 255, 0.8);
        z-index: 2;
        position: relative;
        letter-spacing: 0.03em;
        text-align: center;
        display: block;
        max-width: 85%;
        word-wrap: break-word;
        hyphens: auto;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Dark mode styles */
    :global(.dark) .bubble {
        background: radial-gradient(ellipse at 32% 28%, 
            rgba(51, 65, 85, 0.95) 0%, 
            rgba(30, 41, 59, 0.9) 40%,
            rgba(15, 23, 42, 0.85) 100%);
        border: 2px solid rgba(148, 163, 184, 0.3);
        box-shadow: 
            0 12px 40px rgba(0, 0, 0, 0.4),
            0 4px 12px rgba(0, 0, 0, 0.3),
            inset 0 2px 4px rgba(148, 163, 184, 0.2),
            inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    }

    :global(.dark) .bubble::before {
        background: radial-gradient(ellipse, 
            rgba(148, 163, 184, 0.4) 0%, 
            rgba(148, 163, 184, 0.1) 70%, 
            transparent 100%);
    }

    :global(.dark) .bubble span {
        color: #f1f5f9;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
    }

    /* Hover effects */
    .bubble:hover {
        transform: translateY(-15px) scale(1.12);
        border-radius: 48% 52% 55% 45% / 42% 58% 35% 65%;
        box-shadow: 
            0 25px 60px rgba(0, 0, 0, 0.25),
            0 12px 25px rgba(0, 0, 0, 0.2),
            inset 0 3px 8px rgba(255, 255, 255, 0.95),
            inset 0 -3px 8px rgba(0, 0, 0, 0.15),
            0 0 0 3px rgba(16, 185, 129, 0.3),
            0 0 20px rgba(16, 185, 129, 0.4);
        background: radial-gradient(ellipse at 35% 25%, 
            rgba(16, 185, 129, 0.3) 0%, 
            rgba(34, 197, 94, 0.25) 40%,
            rgba(255, 255, 255, 0.9) 100%);
        animation-play-state: paused;
        z-index: 10;
    }

    .bubble:hover span {
        font-size: 1.1rem;
        color: #0f172a;
        text-shadow: 
            0 2px 4px rgba(255, 255, 255, 0.9),
            0 0 10px rgba(16, 185, 129, 0.3);
        font-weight: 800;
        letter-spacing: 0.05em;
    }

    .bubble:hover::before {
        opacity: 1;
        transform: translateX(3px) translateY(-2px) scale(1.2);
        background: radial-gradient(ellipse, 
            rgba(255, 255, 255, 1) 0%, 
            rgba(255, 255, 255, 0.6) 70%, 
            transparent 100%);
    }

    .bubble:hover::after {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        background: linear-gradient(45deg, 
            rgba(16, 185, 129, 0.4) 0%,
            rgba(34, 197, 94, 0.4) 25%,
            rgba(59, 130, 246, 0.4) 50%,
            rgba(139, 92, 246, 0.4) 75%,
            rgba(16, 185, 129, 0.4) 100%);
        border-radius: inherit;
        z-index: -1;
        filter: blur(8px);
        animation: glowPulse 2s ease-in-out infinite;
    }

    :global(.dark) .bubble:hover {
        background: radial-gradient(ellipse at 35% 25%, 
            rgba(16, 185, 129, 0.4) 0%, 
            rgba(34, 197, 94, 0.35) 40%,
            rgba(51, 65, 85, 0.95) 100%);
        box-shadow: 
            0 25px 60px rgba(0, 0, 0, 0.6),
            0 12px 25px rgba(0, 0, 0, 0.5),
            inset 0 3px 8px rgba(148, 163, 184, 0.4),
            inset 0 -3px 8px rgba(0, 0, 0, 0.5),
            0 0 0 3px rgba(16, 185, 129, 0.4),
            0 0 20px rgba(16, 185, 129, 0.5);
    }

    :global(.dark) .bubble:hover span {
        color: #f8fafc;
        text-shadow: 
            0 2px 4px rgba(0, 0, 0, 0.8),
            0 0 10px rgba(16, 185, 129, 0.5);
    }

    /* Advanced floating and swaying animations */
    @keyframes bubbleFloat {
        0% {
            transform: translateY(0px) translateX(0px) translateZ(0px) rotateX(0deg) rotateY(0deg);
        }
        15% {
            transform: translateY(-25px) translateX(15px) translateZ(10px) rotateX(2deg) rotateY(-1deg);
        }
        30% {
            transform: translateY(-10px) translateX(-20px) translateZ(-5px) rotateX(-1deg) rotateY(3deg);
        }
        45% {
            transform: translateY(-35px) translateX(8px) translateZ(15px) rotateX(3deg) rotateY(-2deg);
        }
        60% {
            transform: translateY(-5px) translateX(-15px) translateZ(-10px) rotateX(-2deg) rotateY(1deg);
        }
        75% {
            transform: translateY(-30px) translateX(25px) translateZ(8px) rotateX(1deg) rotateY(-3deg);
        }
        90% {
            transform: translateY(-15px) translateX(-10px) translateZ(-8px) rotateX(-1deg) rotateY(2deg);
        }
        100% {
            transform: translateY(0px) translateX(0px) translateZ(0px) rotateX(0deg) rotateY(0deg);
        }
    }

    @keyframes bubbleSway {
        0% {
            transform: translateX(0px) rotateZ(0deg) scale(1);
        }
        20% {
            transform: translateX(18px) rotateZ(2deg) scale(1.02);
        }
        40% {
            transform: translateX(-12px) rotateZ(-1.5deg) scale(0.98);
        }
        60% {
            transform: translateX(22px) rotateZ(1.8deg) scale(1.01);
        }
        80% {
            transform: translateX(-18px) rotateZ(-2.2deg) scale(0.99);
        }
        100% {
            transform: translateX(0px) rotateZ(0deg) scale(1);
        }
    }

    @keyframes bubbleDeform {
        0%, 100% {
            border-radius: 52% 48% 45% 55% / 58% 42% 65% 35%;
        }
        12% {
            border-radius: 48% 52% 55% 45% / 42% 58% 35% 65%;
        }
        25% {
            border-radius: 55% 45% 40% 60% / 65% 35% 70% 30%;
        }
        37% {
            border-radius: 45% 55% 60% 40% / 35% 65% 30% 70%;
        }
        50% {
            border-radius: 60% 40% 35% 65% / 50% 50% 75% 25%;
        }
        62% {
            border-radius: 40% 60% 65% 35% / 70% 30% 25% 75%;
        }
        75% {
            border-radius: 58% 42% 38% 62% / 45% 55% 68% 32%;
        }
        87% {
            border-radius: 42% 58% 62% 38% / 55% 45% 32% 68%;
        }
    }

    @keyframes bubbleDrift {
        0%, 100% {
            transform: translateY(0px) translateX(0px);
        }
        25% {
            transform: translateY(-8px) translateX(12px);
        }
        50% {
            transform: translateY(5px) translateX(-15px);
        }
        75% {
            transform: translateY(-12px) translateX(8px);
        }
    }

    @keyframes shimmer {
        0%, 100% {
            opacity: 0.9;
            transform: translateX(0px) translateY(0px);
        }
        50% {
            opacity: 0.6;
            transform: translateX(2px) translateY(-1px);
        }
    }

    @keyframes glowPulse {
        0%, 100% {
            opacity: 0.6;
            transform: scale(1);
        }
        50% {
            opacity: 0.8;
            transform: scale(1.05);
        }
    }

    /* Individual bubble positioning and sizing */
    .bubble:nth-child(1) {
        width: 180px;
        height: 180px;
        top: 12%;
        left: 6%;
        border-radius: 52% 48% 45% 55% / 58% 42% 65% 35%;
        animation-delay: 0s, 0s, 0s, 0s;
        animation-duration: 9s, 14s, 18s, 7s;
        animation-direction: normal, reverse, alternate, normal;
    }

    .bubble:nth-child(2) {
        width: 165px;
        height: 165px;
        top: 48%;
        left: 22%;
        border-radius: 48% 52% 55% 45% / 42% 58% 35% 65%;
        animation-delay: 1.5s, 2.8s, 4.2s, 1s;
        animation-duration: 11s, 16s, 20s, 8.5s;
        animation-direction: reverse, normal, normal, alternate;
    }

    .bubble:nth-child(3) {
        width: 155px;
        height: 155px;
        top: 18%;
        left: 42%;
        border-radius: 55% 45% 40% 60% / 65% 35% 70% 30%;
        animation-delay: 3s, 1.2s, 6s, 2.3s;
        animation-duration: 10s, 13s, 17s, 9s;
        animation-direction: alternate, reverse, reverse, normal;
    }

    .bubble:nth-child(4) {
        width: 190px;
        height: 190px;
        top: 62%;
        left: 62%;
        border-radius: 45% 55% 60% 40% / 35% 65% 30% 70%;
        animation-delay: 0.8s, 4s, 2.5s, 3.5s;
        animation-duration: 12s, 18s, 22s, 6.8s;
        animation-direction: normal, alternate, normal, reverse;
    }

    .bubble:nth-child(5) {
        width: 170px;
        height: 170px;
        top: 8%;
        left: 70%;
        border-radius: 60% 40% 35% 65% / 50% 50% 75% 25%;
        animation-delay: 4.2s, 1.8s, 8s, 0.5s;
        animation-duration: 8s, 15s, 19s, 7.5s;
        animation-direction: reverse, normal, alternate, alternate;
    }

    .bubble:nth-child(6) {
        width: 175px;
        height: 175px;
        top: 67%;
        left: 12%;
        border-radius: 40% 60% 65% 35% / 70% 30% 25% 75%;
        animation-delay: 2s, 5.5s, 3.8s, 4.2s;
        animation-duration: 13s, 12s, 21s, 8.2s;
        animation-direction: alternate, reverse, normal, normal;
    }

    .bubble:nth-child(7) {
        width: 150px;
        height: 150px;
        top: 32%;
        left: 83%;
        border-radius: 58% 42% 38% 62% / 45% 55% 68% 32%;
        animation-delay: 5.8s, 0.8s, 7.2s, 2.8s;
        animation-duration: 9.5s, 17s, 16s, 9.2s;
        animation-direction: normal, alternate, reverse, reverse;
    }

    .bubble:nth-child(8) {
        width: 185px;
        height: 185px;
        top: 77%;
        left: 42%;
        border-radius: 42% 58% 62% 38% / 55% 45% 32% 68%;
        animation-delay: 3.5s, 3.2s, 9s, 1.8s;
        animation-duration: 11.5s, 14s, 23s, 7.8s;
        animation-direction: reverse, normal, alternate, normal;
    }

    .bubble:nth-child(9) {
        width: 160px;
        height: 160px;
        top: 52%;
        left: 3%;
        border-radius: 65% 35% 30% 70% / 40% 60% 80% 20%;
        animation-delay: 6.2s, 4.8s, 1.5s, 3.8s;
        animation-duration: 10.2s, 16s, 18s, 8.8s;
        animation-direction: alternate, reverse, normal, alternate;
    }

    .bubble:nth-child(10) {
        width: 175px;
        height: 175px;
        top: 22%;
        left: 22%;
        border-radius: 35% 65% 70% 30% / 60% 40% 20% 80%;
        animation-delay: 4.8s, 6s, 10.5s, 0.2s;
        animation-duration: 12.8s, 15s, 24s, 9.5s;
        animation-direction: normal, alternate, reverse, reverse;
    }

    /* Responsive design */
    @media (max-width: 768px) {
        .soft-skills-container {
            min-height: 600px;
        }

        .bubbles-container {
            padding: 1rem;
            position: relative;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 1.5rem;
            align-items: center;
            justify-items: center;
        }

        .bubble {
            position: relative !important;
            width: 140px !important;
            height: 140px !important;
            top: auto !important;
            left: auto !important;
            margin: 0.5rem;
        }

        .bubble span {
            font-size: 0.85rem;
            padding: 0.8rem;
        }

        .bubble:hover {
            transform: translateY(-8px) scale(1.08);
        }
    }

    @media (max-width: 480px) {
        .soft-skills-container {
            min-height: 500px;
        }

        .bubbles-container {
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
        }

        .bubble {
            width: 120px !important;
            height: 120px !important;
        }

        .bubble span {
            font-size: 0.75rem;
            padding: 0.5rem;
        }

        .bubble:hover span {
            font-size: 0.8rem;
        }
    }

    /* Enhanced entrance animation */
    @keyframes bubblePop {
        0% {
            transform: scale(0);
            opacity: 0;
            border-radius: 50%;
        }
        60% {
            transform: scale(1.1);
            opacity: 0.8;
            border-radius: 45% 55% 55% 45% / 60% 40% 40% 60%;
        }
        100% {
            transform: scale(1);
            opacity: 1;
        }
    }

    .bubble {
        animation: bubblePop 1s ease-out, 
                   bubbleFloat 8s ease-in-out infinite 1s, 
                   bubbleSway 12s ease-in-out infinite 1s, 
                   bubbleDeform 15s ease-in-out infinite 1s,
                   bubbleDrift 6s ease-in-out infinite 1s;
    }
</style>

<script>
    // Add interactive hover effects and random movement
    document.addEventListener('DOMContentLoaded', function() {
        const bubbles = document.querySelectorAll('.bubble');
        
        // Function to generate random movement
        function addRandomMovement(bubble, index) {
            const randomInterval = 3000 + Math.random() * 4000; // 3-7 seconds
            
            setInterval(() => {
                if (!bubble.matches(':hover')) {
                    const randomX = (Math.random() - 0.5) * 30; // ±15px
                    const randomY = (Math.random() - 0.5) * 40; // ±20px
                    const randomZ = (Math.random() - 0.5) * 20; // ±10px
                    const randomRotateX = (Math.random() - 0.5) * 6; // ±3deg
                    const randomRotateY = (Math.random() - 0.5) * 6; // ±3deg
                    const randomRotateZ = (Math.random() - 0.5) * 4; // ±2deg
                    const randomScale = 0.95 + Math.random() * 0.1; // 0.95-1.05
                    
                    const duration = 2000 + Math.random() * 3000; // 2-5 seconds
                    
                    bubble.style.transition = `transform ${duration}ms cubic-bezier(0.4, 0, 0.2, 1)`;
                    bubble.style.transform = `
                        translate3d(${randomX}px, ${randomY}px, ${randomZ}px) 
                        rotateX(${randomRotateX}deg) 
                        rotateY(${randomRotateY}deg) 
                        rotateZ(${randomRotateZ}deg) 
                        scale(${randomScale})
                    `;
                    
                    // Return to original position after movement
                    setTimeout(() => {
                        if (!bubble.matches(':hover')) {
                            bubble.style.transform = 'translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg) scale(1)';
                        }
                    }, duration);
                }
            }, randomInterval);
        }
        
        bubbles.forEach((bubble, index) => {
            // Add staggered entrance animation
            bubble.style.animationDelay = `${index * 0.15}s`;
            
            // Start random movement after initial animation
            setTimeout(() => {
                addRandomMovement(bubble, index);
            }, 1000 + index * 150);
            
            // Add click interaction
            bubble.addEventListener('click', function() {
                const skill = this.dataset.skill;
                
                // Create a ripple effect
                const ripple = document.createElement('div');
                ripple.style.cssText = `
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    width: 0;
                    height: 0;
                    background: rgba(16, 185, 129, 0.4);
                    border-radius: 50%;
                    transform: translate(-50%, -50%);
                    animation: ripple 0.8s ease-out;
                    pointer-events: none;
                    z-index: 1;
                `;
                
                this.appendChild(ripple);
                
                // Remove ripple after animation
                setTimeout(() => {
                    if (ripple.parentNode) {
                        ripple.parentNode.removeChild(ripple);
                    }
                }, 800);
                
                // Explosive movement on click
                const explosiveX = (Math.random() - 0.5) * 60;
                const explosiveY = (Math.random() - 0.5) * 60;
                const explosiveRotate = (Math.random() - 0.5) * 20;
                
                this.style.transition = 'transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55)';
                this.style.transform = `
                    translate3d(${explosiveX}px, ${explosiveY}px, 0px) 
                    rotate(${explosiveRotate}deg) 
                    scale(1.15)
                `;
                
                setTimeout(() => {
                    this.style.transform = 'translate3d(0px, 0px, 0px) rotate(0deg) scale(1)';
                    this.style.transition = '';
                }, 300);
                
                console.log(`Skill selected: ${skill}`);
            });

            // Enhanced hover interaction
            bubble.addEventListener('mouseenter', function() {
                const attractX = (Math.random() - 0.5) * 12;
                const attractY = -15 + (Math.random() - 0.5) * 8;
                const attractZ = 5 + Math.random() * 10;
                const hoverRotateX = (Math.random() - 0.5) * 4;
                const hoverRotateY = (Math.random() - 0.5) * 4;
                
                this.style.transition = 'all 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
                this.style.transform = `
                    translate3d(${attractX}px, ${attractY}px, ${attractZ}px) 
                    rotateX(${hoverRotateX}deg) 
                    rotateY(${hoverRotateY}deg) 
                    scale(1.12)
                `;
                
                const span = this.querySelector('span');
                if (span) {
                    span.style.transition = 'all 0.3s ease-out';
                    span.style.transform = 'scale(1.05)';
                }
                
                this.style.animation = 'none';
            });

            bubble.addEventListener('mouseleave', function() {
                this.style.transform = '';
                this.style.animation = '';
                
                const span = this.querySelector('span');
                if (span) {
                    span.style.transform = '';
                }
            });
        });
    });

    // Add dynamic CSS animations
    const style = document.createElement('style');
    style.textContent = `
        @keyframes ripple {
            to {
                width: 280px;
                height: 280px;
                opacity: 0;
            }
        }
    `;
    document.head.appendChild(style);
</script>
