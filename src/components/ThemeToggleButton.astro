---
/**
 * ThemeToggleButton.astro - Versi√≥n simplificada y funcional
 * 
 * Caracter√≠sticas:
 * - Toggle funcional con slider animado
 * - Cambio de iconos suave
 * - Compatibilidad con el sistema de tema global
 * - Accesibilidad b√°sica
 */
---

<div class="theme-toggle-container">
  <input 
    type="checkbox" 
    id="theme-toggle" 
    class="theme-toggle-input" 
    aria-label="Cambiar entre tema claro y oscuro"
  />
  <label for="theme-toggle" class="theme-toggle-btn">
    <!-- Slider que se mueve -->
    <div class="toggle-slider"></div>
    
    <!-- Icono del sol (tema claro) -->
    <div class="toggle-icon sun-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <circle cx="12" cy="12" r="5"/>
        <line x1="12" y1="1" x2="12" y2="3"/>
        <line x1="12" y1="21" x2="12" y2="23"/>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
        <line x1="1" y1="12" x2="3" y2="12"/>
        <line x1="21" y1="12" x2="23" y2="12"/>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
      </svg>
    </div>
    
    <!-- Icono de la luna (tema oscuro) -->
    <div class="toggle-icon moon-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
      </svg>
    </div>
  </label>
  
  <!-- Estado para accesibilidad -->
  <div id="theme-status" class="sr-only" role="status" aria-live="polite"></div>
</div>

<style>
  .theme-toggle-container {
    position: relative;
    display: inline-block;
  }

  /* Input oculto */
  .theme-toggle-input {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Bot√≥n principal */
  .theme-toggle-btn {
    position: relative;
    display: flex;
    align-items: center;
    width: 3.5rem;
    height: 1.75rem;
    background: #e2e8f0;
    border-radius: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  /* Estado oscuro del bot√≥n */
  .dark .theme-toggle-btn {
    background: #334155;
  }

  /* Focus visible */
  .theme-toggle-input:focus + .theme-toggle-btn {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  /* Hover */
  .theme-toggle-btn:hover {
    transform: scale(1.05);
  }

  /* Slider que se mueve */
  .toggle-slider {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 1.25rem;
    height: 1.25rem;
    background: white;
    border-radius: 50%;
    transition: transform 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    z-index: 2;
  }

  /* Mover slider cuando est√° checked */
  .theme-toggle-input:checked + .theme-toggle-btn .toggle-slider {
    transform: translateX(1.75rem);
    background: #1e293b;
  }

  /* Iconos base */
  .toggle-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 1rem;
    height: 1rem;
    transition: all 0.3s ease;
    z-index: 1;
  }

  .toggle-icon svg {
    width: 100%;
    height: 100%;
    stroke-width: 2;
  }

  /* Posici√≥n del icono del sol */
  .sun-icon {
    left: 0.375rem;
    color: #f59e0b;
    opacity: 1;
  }

  /* Posici√≥n del icono de la luna */
  .moon-icon {
    right: 0.375rem;
    color: #6b7280;
    opacity: 0;
  }

  /* Estados cuando est√° checked (tema oscuro) */
  .theme-toggle-input:checked + .theme-toggle-btn .sun-icon {
    opacity: 0;
    transform: translateY(-50%) scale(0.8);
  }

  .theme-toggle-input:checked + .theme-toggle-btn .moon-icon {
    opacity: 1;
    color: #e2e8f0;
    transform: translateY(-50%) scale(1);
  }

  /* Utilidad para accesibilidad */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Animaci√≥n suave para modo reducido */
  @media (prefers-reduced-motion: reduce) {
    .theme-toggle-btn,
    .toggle-slider,
    .toggle-icon {
      transition-duration: 0.1s;
    }
  }
</style>

<script>
  console.log('üîß Inicializando Theme Toggle simplificado...');

  function initializeThemeToggle() {
    const toggleInput = document.getElementById('theme-toggle') as HTMLInputElement;
    const themeStatus = document.getElementById('theme-status') as HTMLElement;
    
    if (!toggleInput) {
      console.error('‚ùå Theme toggle input no encontrado');
      return;
    }

    // Configurar estado inicial basado en el tema actual
    updateToggleState();

    // Event listener para el cambio
    toggleInput.addEventListener('change', handleThemeChange);

    // Observar cambios en el tema desde otras fuentes
    observeThemeChanges();

    console.log('‚úÖ Theme Toggle inicializado correctamente');
  }

  function updateToggleState() {
    const toggleInput = document.getElementById('theme-toggle') as HTMLInputElement;
    const themeStatus = document.getElementById('theme-status') as HTMLElement;
    
    if (!toggleInput) return;

    const isDark = document.documentElement.classList.contains('dark');
    toggleInput.checked = isDark;
    
    if (themeStatus) {
      themeStatus.textContent = isDark 
        ? 'Tema oscuro activado' 
        : 'Tema claro activado';
    }

    console.log(`üé® Estado del toggle actualizado: ${isDark ? 'oscuro' : 'claro'}`);
  }

  function handleThemeChange() {
    const toggleInput = document.getElementById('theme-toggle') as HTMLInputElement;
    
    if (!toggleInput) return;

    const willBeDark = toggleInput.checked;
    console.log(`üîÑ Cambiando tema a: ${willBeDark ? 'oscuro' : 'claro'}`);

    // Usar la funci√≥n global si est√° disponible
    if (typeof window.toggleThemeWithAnimation === 'function') {
      console.log('üé≠ Usando funci√≥n global de animaci√≥n');
      window.toggleThemeWithAnimation();
    } else {
      // Fallback directo
      console.log('üîÑ Usando cambio directo de tema');
      const html = document.documentElement;
      
      if (willBeDark) {
        html.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      } else {
        html.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      }
    }

    // Actualizar estado de accesibilidad
    const themeStatus = document.getElementById('theme-status');
    if (themeStatus) {
      themeStatus.textContent = willBeDark 
        ? 'Tema oscuro activado' 
        : 'Tema claro activado';
    }

    // Feedback h√°ptico opcional
    if ('vibrate' in navigator) {
      navigator.vibrate(10);
    }
  }

  function observeThemeChanges() {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.attributeName === 'class') {
          console.log('üîç Cambio de tema detectado desde fuente externa');
          updateToggleState();
        }
      });
    });
    
    observer.observe(document.documentElement, { 
      attributes: true, 
      attributeFilter: ['class'] 
    });
  }

  // Inicializar cuando el DOM est√© listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeThemeToggle);
  } else {
    initializeThemeToggle();
  }
</script>